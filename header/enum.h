#define PLUM_FILENAME (-(size_t) 1)
#define PLUM_BUFFER   (-(size_t) 2)
#define PLUM_CALLBACK (-(size_t) 3)

enum plum_flags {
  /* color formats */
  PLUM_COLOR_32   = 0, /* RGBA 8.8.8.8 */
  PLUM_COLOR_64   = 1, /* RGBA 16.16.16.16 */
  PLUM_COLOR_16   = 2, /* RGBA 5.5.5.1 */
  PLUM_COLOR_32X  = 3, /* RGBA 10.10.10.2 */
  PLUM_COLOR_MASK = 3,
  /* alpha */
  PLUM_ALPHA_INVERT = 4,
  PLUM_ALPHA_REMOVE = 8,
  /* palettes */
  PLUM_PALETTE_NONE     =    0,
  PLUM_PALETTE_LOAD     = 0x10,
  PLUM_PALETTE_GENERATE = 0x20,
  PLUM_PALETTE_FORCE    = 0x30,
  PLUM_PALETTE_MASK     = 0x30
};

enum plum_image_types {
  PLUM_IMAGE_NONE,
  PLUM_IMAGE_BMP,
  PLUM_IMAGE_GIF,
  PLUM_IMAGE_PNG,
  PLUM_IMAGE_APNG,
  PLUM_NUM_IMAGE_TYPES
};

enum plum_metadata_types {
  PLUM_METADATA_NONE,
  PLUM_METADATA_COLOR_DEPTH,
  PLUM_METADATA_BACKGROUND,
  PLUM_METADATA_LOOP_COUNT,
  PLUM_METADATA_FRAME_DURATION,
  PLUM_METADATA_FRAME_DISPOSAL,
  PLUM_NUM_METADATA_TYPES
};

enum plum_frame_disposal_methods {
  PLUM_DISPOSAL_NONE,
  PLUM_DISPOSAL_BACKGROUND,
  PLUM_DISPOSAL_PREVIOUS,
  PLUM_DISPOSAL_REPLACE,
  PLUM_DISPOSAL_BACKGROUND_REPLACE,
  PLUM_DISPOSAL_PREVIOUS_REPLACE
};

enum plum_errors {
  PLUM_OK,
  PLUM_ERR_INVALID_ARGUMENTS,
  PLUM_ERR_INVALID_FILE_FORMAT,
  PLUM_ERR_INVALID_IMAGE_DATA,
  PLUM_ERR_INVALID_METADATA,
  PLUM_ERR_INVALID_COLOR_INDEX,
  PLUM_ERR_TOO_MANY_COLORS,
  PLUM_ERR_UNDEFINED_PALETTE,
  PLUM_ERR_IMAGE_TOO_LARGE,
  PLUM_ERR_NO_DATA,
  PLUM_ERR_NO_MULTI_FRAME,
  PLUM_ERR_FILE_INACCESSIBLE,
  PLUM_ERR_FILE_ERROR,
  PLUM_ERR_OUT_OF_MEMORY,
  PLUM_NUM_ERRORS
};
